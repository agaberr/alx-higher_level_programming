The '5-text_indentation' module
================================

Using '5-text_indentation'
----------------------------

>>> text_indentation = __import__('5-text_indentation').text_indentation

>>> text_indentation("Ahmed   :     Gaber    ?    Abdaleem.    Morcy     ")
Ahmed:
<BLANKLINE>
Gaber?
<BLANKLINE>
Abdaleem.
<BLANKLINE>
Morcy

>>> text_indentation(".?:")
.
<BLANKLINE>
?
<BLANKLINE>
:
<BLANKLINE>

>>> text_indentation("    Ahmed")
Ahmed

>>> text_indentation("  ?  ")
?
<BLANKLINE>

>>> text_indentation("?Gaber.")
?
<BLANKLINE>
Gaber.
<BLANKLINE>

>>> text_indentation("?\n\n.\n\n:")
?
<BLANKLINE>
<BLANKLINE>
<BLANKLINE>
.
<BLANKLINE>
<BLANKLINE>
<BLANKLINE>
:
<BLANKLINE>

>>> text_indentation(None)
Traceback (most recent call last):
...
TypeError: text must be a string

>>> text_indentation(33)
Traceback (most recent call last):
...
TypeError: text must be a string

>>> text_indentation("        Gaber          ")
Gaber

>>> text_indentation("")

>>> text_indentation("      ")

>>> text_indentation("Ahmed: Gaber")
Ahmed:
<BLANKLINE>
Gaber

>>> text_indentation("      ?:  :  ")
?
<BLANKLINE>
:
<BLANKLINE>
:
<BLANKLINE>

>>> text_indentation("\n")
<BLANKLINE>

>>> text_indentation("\n\n")
<BLANKLINE>
<BLANKLINE>

>>> text_indentation("Ahmed\n\n")
Ahmed
<BLANKLINE>


>>> text_indentation("Ahmed Gaber")
Ahmed Gaber

>>> text_indentation("Gaber    ")
Gaber

>>> text_indentation("Ahmed: Gaber? Abdaleem. fooo")
Ahmed:
<BLANKLINE>
Gaber?
<BLANKLINE>
Abdaleem.
<BLANKLINE>
fooo

>>> text_indentation("Ahmed   :   Gaber  ?  school.  fooo")
Ahmed:
<BLANKLINE>
Gaber?
<BLANKLINE>
school.
<BLANKLINE>
fooo
